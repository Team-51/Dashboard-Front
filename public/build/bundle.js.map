{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-navigator/src/utils.js","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-navigator/src/contexts.js","../../node_modules/svelte-navigator/src/paths.js","../../node_modules/svelte-navigator/src/warning.js","../../node_modules/svelte-navigator/src/routes.js","../../node_modules/svelte-navigator/src/history.js","../../node_modules/svelte-navigator/src/a11y.js","../../node_modules/svelte-navigator/src/Router.svelte","../../node_modules/svelte-navigator/src/hooks.js","../../node_modules/svelte-navigator/src/Route.svelte","../../node_modules/svelte-navigator/src/Link.svelte","../../src/routes/Login.svelte","../../src/components/Carousel.svelte","../../src/routes/List.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nexport const isUndefined = value => typeof value === \"undefined\";\n\nexport const isFunction = value => typeof value === \"function\";\n\nexport const isNumber = value => typeof value === \"number\";\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nexport function shouldNavigate(event) {\n\treturn (\n\t\t!event.defaultPrevented &&\n\t\tevent.button === 0 &&\n\t\t!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n\t);\n}\n\nexport function createCounter() {\n\tlet i = 0;\n\t/**\n\t * Returns an id and increments the internal state\n\t * @returns {number}\n\t */\n\treturn () => i++;\n}\n\n/**\n * Create a globally unique id\n *\n * @returns {string} An id\n */\nexport function createGlobalId() {\n\treturn Math.random().toString(36).substring(2);\n}\n\nexport function findClosest(tagName, element) {\n\twhile (element && element.tagName !== tagName) {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\telement = element.parentNode;\n\t}\n\treturn element;\n}\n\nexport const isSSR = typeof window === \"undefined\";\n\nexport function addListener(target, type, handler) {\n\ttarget.addEventListener(type, handler);\n\treturn () => target.removeEventListener(type, handler);\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","/*\n * Adapted from https://github.com/EmilTholin/svelte-routing\n *\n * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n */\n\nconst createKey = ctxName => `@@svnav-ctx__${ctxName}`;\n\n// Use strings instead of objects, so different versions of\n// svelte-navigator can potentially still work together\nexport const LOCATION = createKey(\"LOCATION\");\nexport const ROUTER = createKey(\"ROUTER\");\nexport const ROUTE = createKey(\"ROUTE\");\nexport const ROUTE_PARAMS = createKey(\"ROUTE_PARAMS\");\nexport const FOCUS_ELEM = createKey(\"FOCUS_ELEM\");\n","export const paramRegex = /^:(.+)/;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport const startsWith = (string, search) =>\n\tstring.substr(0, search.length) === search;\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isRootSegment = segment => segment === \"\";\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isDynamic = segment => paramRegex.test(segment);\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nexport const isSplat = segment => segment[0] === \"*\";\n\n/**\n * Strip potention splat and splatname of the end of a path\n * @param {string} str\n * @return {string}\n */\nexport const stripSplat = str => str.replace(/\\*.*$/, \"\");\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nexport const stripSlashes = str => str.replace(/(^\\/+|\\/+$)/g, \"\");\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nexport function segmentize(uri, filterFalsy = false) {\n\tconst segments = stripSlashes(uri).split(\"/\");\n\treturn filterFalsy ? segments.filter(Boolean) : segments;\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nexport const addQuery = (pathname, query) =>\n\tpathname + (query ? `?${query}` : \"\");\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nexport function combinePaths(basepath, path) {\n\tconst barePath =\n\t\tpath === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`;\n\treturn `${stripSlashes(barePath)}/`;\n}\n\n/**\n * Normalizes a basepath\n *\n * @param {string} path\n * @returns {string}\n *\n * @example\n * normalizePath(\"base/path/\") // -> \"/base/path\"\n */\nexport const normalizePath = path => `/${stripSlashes(path)}`;\n\n/**\n * Joins and normalizes multiple path fragments\n *\n * @param {...string} pathFragments\n * @returns {string}\n */\nexport function join(...pathFragments) {\n\tconst joinFragment = fragment => segmentize(fragment, true).join(\"/\");\n\tconst joinedSegments = pathFragments.map(joinFragment).join(\"/\");\n\treturn normalizePath(joinedSegments);\n}\n","import { isFunction } from \"./utils\";\n\n// We start from 1 here, so we can check if an origin id has been passed\n// by using `originId || <fallback>`\nexport const LINK_ID = 1;\nexport const ROUTE_ID = 2;\nexport const ROUTER_ID = 3;\nexport const USE_FOCUS_ID = 4;\nexport const USE_LOCATION_ID = 5;\nexport const USE_MATCH_ID = 6;\nexport const USE_NAVIGATE_ID = 7;\nexport const USE_PARAMS_ID = 8;\nexport const USE_RESOLVABLE_ID = 9;\nexport const USE_RESOLVE_ID = 10;\nexport const NAVIGATE_ID = 11;\n\nconst labels = {\n\t[LINK_ID]: \"Link\",\n\t[ROUTE_ID]: \"Route\",\n\t[ROUTER_ID]: \"Router\",\n\t[USE_FOCUS_ID]: \"useFocus\",\n\t[USE_LOCATION_ID]: \"useLocation\",\n\t[USE_MATCH_ID]: \"useMatch\",\n\t[USE_NAVIGATE_ID]: \"useNavigate\",\n\t[USE_PARAMS_ID]: \"useParams\",\n\t[USE_RESOLVABLE_ID]: \"useResolvable\",\n\t[USE_RESOLVE_ID]: \"useResolve\",\n\t[NAVIGATE_ID]: \"navigate\",\n};\n\nexport const createLabel = labelId => labels[labelId];\n\nexport function createIdentifier(labelId, props) {\n\tlet attr;\n\tif (labelId === ROUTE_ID) {\n\t\tattr = props.path ? `path=\"${props.path}\"` : \"default\";\n\t} else if (labelId === LINK_ID) {\n\t\tattr = `to=\"${props.to}\"`;\n\t} else if (labelId === ROUTER_ID) {\n\t\tattr = `basepath=\"${props.basepath || \"\"}\"`;\n\t}\n\treturn `<${createLabel(labelId)} ${attr || \"\"} />`;\n}\n\nexport function createMessage(labelId, message, props, originId) {\n\tconst origin = props && createIdentifier(originId || labelId, props);\n\tconst originMsg = origin ? `\\n\\nOccurred in: ${origin}` : \"\";\n\tconst label = createLabel(labelId);\n\tconst msg = isFunction(message) ? message(label) : message;\n\treturn `<${label}> ${msg}${originMsg}`;\n}\n\nexport const createMessageHandler = handler => (...args) =>\n\thandler(createMessage(...args));\n\nexport const fail = createMessageHandler(message => {\n\tthrow new Error(message);\n});\n\n// eslint-disable-next-line no-console\nexport const warn = createMessageHandler(console.warn);\n","import {\n\tsegmentize,\n\tjoin,\n\taddQuery,\n\tstartsWith,\n\tparamRegex,\n\tisSplat,\n\tisRootSegment,\n\tisDynamic,\n\tstripSplat,\n\tnormalizePath,\n} from \"./paths\";\nimport { ROUTER_ID, fail } from \"./warning\";\nimport { isUndefined } from \"./utils\";\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nexport function rankRoute(route, index) {\n\tconst score = route.default\n\t\t? 0\n\t\t: segmentize(route.fullPath).reduce((acc, segment) => {\n\t\t\t\tlet nextScore = acc;\n\t\t\t\tnextScore += SEGMENT_POINTS;\n\n\t\t\t\tif (isRootSegment(segment)) {\n\t\t\t\t\tnextScore += ROOT_POINTS;\n\t\t\t\t} else if (isDynamic(segment)) {\n\t\t\t\t\tnextScore += DYNAMIC_POINTS;\n\t\t\t\t} else if (isSplat(segment)) {\n\t\t\t\t\tnextScore -= SEGMENT_POINTS + SPLAT_PENALTY;\n\t\t\t\t} else {\n\t\t\t\t\tnextScore += STATIC_POINTS;\n\t\t\t\t}\n\n\t\t\t\treturn nextScore;\n\t\t  }, 0);\n\n\treturn { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nexport function rankRoutes(routes) {\n\treturn (\n\t\troutes\n\t\t\t.map(rankRoute)\n\t\t\t// If two routes have the exact same score, we go by index instead\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a.score < b.score) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (a.score > b.score) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn a.index - b.index;\n\t\t\t})\n\t);\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { fullPath, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nexport function pick(routes, uri) {\n\tlet bestMatch;\n\tlet defaultMatch;\n\n\tconst [uriPathname] = uri.split(\"?\");\n\tconst uriSegments = segmentize(uriPathname);\n\tconst isRootUri = uriSegments[0] === \"\";\n\tconst ranked = rankRoutes(routes);\n\n\tfor (let i = 0, l = ranked.length; i < l; i++) {\n\t\tconst { route } = ranked[i];\n\t\tlet missed = false;\n\t\tconst params = {};\n\n\t\t// eslint-disable-next-line no-shadow\n\t\tconst createMatch = uri => ({ ...route, params, uri });\n\n\t\tif (route.default) {\n\t\t\tdefaultMatch = createMatch(uri);\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst routeSegments = segmentize(route.fullPath);\n\t\tconst max = Math.max(uriSegments.length, routeSegments.length);\n\t\tlet index = 0;\n\n\t\tfor (; index < max; index++) {\n\t\t\tconst routeSegment = routeSegments[index];\n\t\t\tconst uriSegment = uriSegments[index];\n\n\t\t\tif (!isUndefined(routeSegment) && isSplat(routeSegment)) {\n\t\t\t\t// Hit a splat, just grab the rest, and return a match\n\t\t\t\t// uri:   /files/documents/work\n\t\t\t\t// route: /files/* or /files/*splatname\n\t\t\t\tconst splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n\t\t\t\tparams[splatName] = uriSegments\n\t\t\t\t\t.slice(index)\n\t\t\t\t\t.map(decodeURIComponent)\n\t\t\t\t\t.join(\"/\");\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (isUndefined(uriSegment)) {\n\t\t\t\t// URI is shorter than the route, no match\n\t\t\t\t// uri:   /users\n\t\t\t\t// route: /users/:userId\n\t\t\t\tmissed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst dynamicMatch = paramRegex.exec(routeSegment);\n\n\t\t\tif (dynamicMatch && !isRootUri) {\n\t\t\t\tconst value = decodeURIComponent(uriSegment);\n\t\t\t\tparams[dynamicMatch[1]] = value;\n\t\t\t} else if (routeSegment !== uriSegment) {\n\t\t\t\t// Current segments don't match, not dynamic, not splat, so no match\n\t\t\t\t// uri:   /users/123/settings\n\t\t\t\t// route: /users/:id/profile\n\t\t\t\tmissed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!missed) {\n\t\t\tbestMatch = createMatch(join(...uriSegments.slice(0, index)));\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn bestMatch || defaultMatch || null;\n}\n\n/**\n * Check if the `route.fullPath` matches the `uri`.\n * @param {Object} route\n * @param {string} uri\n * @return {?object}\n */\nexport function match(route, uri) {\n\treturn pick([route], uri);\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nexport function resolve(to, base) {\n\t// /foo/bar, /baz/qux => /foo/bar\n\tif (startsWith(to, \"/\")) {\n\t\treturn to;\n\t}\n\n\tconst [toPathname, toQuery] = to.split(\"?\");\n\tconst [basePathname] = base.split(\"?\");\n\tconst toSegments = segmentize(toPathname);\n\tconst baseSegments = segmentize(basePathname);\n\n\t// ?a=b, /users?b=c => /users?a=b\n\tif (toSegments[0] === \"\") {\n\t\treturn addQuery(basePathname, toQuery);\n\t}\n\n\t// profile, /users/789 => /users/789/profile\n\tif (!startsWith(toSegments[0], \".\")) {\n\t\tconst pathname = baseSegments.concat(toSegments).join(\"/\");\n\t\treturn addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n\t}\n\n\t// ./       , /users/123 => /users/123\n\t// ../      , /users/123 => /users\n\t// ../..    , /users/123 => /\n\t// ../../one, /a/b/c/d   => /a/b/one\n\t// .././one , /a/b/c/d   => /a/b/c/one\n\tconst allSegments = baseSegments.concat(toSegments);\n\tconst segments = [];\n\n\tallSegments.forEach(segment => {\n\t\tif (segment === \"..\") {\n\t\t\tsegments.pop();\n\t\t} else if (segment !== \".\") {\n\t\t\tsegments.push(segment);\n\t\t}\n\t});\n\n\treturn addQuery(`/${segments.join(\"/\")}`, toQuery);\n}\n\n/**\n * Normalizes a location for consumption by `Route` children and the `Router`.\n * It removes the apps basepath from the pathname\n * and sets default values for `search` and `hash` properties.\n *\n * @param {Object} location The current global location supplied by the history component\n * @param {string} basepath The applications basepath (i.e. when serving from a subdirectory)\n *\n * @returns The normalized location\n */\nexport function normalizeLocation(location, basepath) {\n\tconst { pathname, hash = \"\", search = \"\", state } = location;\n\tconst baseSegments = segmentize(basepath, true);\n\tconst pathSegments = segmentize(pathname, true);\n\twhile (baseSegments.length) {\n\t\tif (baseSegments[0] !== pathSegments[0]) {\n\t\t\tfail(\n\t\t\t\tROUTER_ID,\n\t\t\t\t`Invalid state: All locations must begin with the basepath \"${basepath}\", found \"${pathname}\"`,\n\t\t\t);\n\t\t}\n\t\tbaseSegments.shift();\n\t\tpathSegments.shift();\n\t}\n\treturn {\n\t\tpathname: join(...pathSegments),\n\t\thash,\n\t\tsearch,\n\t\tstate,\n\t};\n}\n\nconst normalizeUrlFragment = frag => (frag.length === 1 ? \"\" : frag);\n\n/**\n * Creates a location object from an url.\n * It is used to create a location from the url prop used in SSR\n *\n * @param {string} url The url string (e.g. \"/path/to/somewhere\")\n *\n * @returns {{ pathname: string; search: string; hash: string }} The location\n */\nexport function createLocation(url) {\n\tconst searchIndex = url.indexOf(\"?\");\n\tconst hashIndex = url.indexOf(\"#\");\n\tconst hasSearchIndex = searchIndex !== -1;\n\tconst hasHashIndex = hashIndex !== -1;\n\tconst hash = hasHashIndex ? normalizeUrlFragment(url.substr(hashIndex)) : \"\";\n\tconst pathnameAndSearch = hasHashIndex ? url.substr(0, hashIndex) : url;\n\tconst search = hasSearchIndex\n\t\t? normalizeUrlFragment(pathnameAndSearch.substr(searchIndex))\n\t\t: \"\";\n\tconst pathname = hasSearchIndex\n\t\t? pathnameAndSearch.substr(0, searchIndex)\n\t\t: pathnameAndSearch;\n\treturn { pathname, search, hash };\n}\n\n/**\n * Resolves a link relative to the parent Route and the Routers basepath.\n *\n * @param {string} path The given path, that will be resolved\n * @param {string} routeBase The current Routes base path\n * @param {string} appBase The basepath of the app. Used, when serving from a subdirectory\n * @returns {string} The resolved path\n *\n * @example\n * resolveLink(\"relative\", \"/routeBase\", \"/\") // -> \"/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/\") // -> \"/absolute\"\n * resolveLink(\"relative\", \"/routeBase\", \"/base\") // -> \"/base/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/base\") // -> \"/base/absolute\"\n */\nexport function resolveLink(path, routeBase, appBase) {\n\treturn join(appBase, resolve(path, routeBase));\n}\n\n/**\n * Get the uri for a Route, by matching it against the current location.\n *\n * @param {string} routePath The Routes resolved path\n * @param {string} pathname The current locations pathname\n */\nexport function extractBaseUri(routePath, pathname) {\n\tconst fullPath = normalizePath(stripSplat(routePath));\n\tconst baseSegments = segmentize(fullPath, true);\n\tconst pathSegments = segmentize(pathname, true).slice(0, baseSegments.length);\n\tconst routeMatch = match({ fullPath }, join(...pathSegments));\n\treturn routeMatch && routeMatch.uri;\n}\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nimport { createLocation } from \"./routes\";\nimport { createGlobalId, isSSR, isNumber, addListener } from \"./utils\";\nimport { warn, NAVIGATE_ID } from \"./warning\";\n\nconst POP = \"POP\";\nconst PUSH = \"PUSH\";\nconst REPLACE = \"REPLACE\";\n\nfunction getLocation(source) {\n\treturn {\n\t\t...source.location,\n\t\tpathname: encodeURI(decodeURI(source.location.pathname)),\n\t\tstate: source.history.state,\n\t\t_key: (source.history.state && source.history.state._key) || \"initial\",\n\t};\n}\n\nfunction createHistory(source) {\n\tlet listeners = [];\n\tlet location = getLocation(source);\n\tlet action = POP;\n\n\tconst notifyListeners = (listenerFns = listeners) =>\n\t\tlistenerFns.forEach(listener => listener({ location, action }));\n\n\treturn {\n\t\tget location() {\n\t\t\treturn location;\n\t\t},\n\t\tlisten(listener) {\n\t\t\tlisteners.push(listener);\n\n\t\t\tconst popstateListener = () => {\n\t\t\t\tlocation = getLocation(source);\n\t\t\t\taction = POP;\n\t\t\t\tnotifyListeners([listener]);\n\t\t\t};\n\n\t\t\t// Call listener when it is registered\n\t\t\tnotifyListeners([listener]);\n\n\t\t\tconst unlisten = addListener(source, \"popstate\", popstateListener);\n\t\t\treturn () => {\n\t\t\t\tunlisten();\n\t\t\t\tlisteners = listeners.filter(fn => fn !== listener);\n\t\t\t};\n\t\t},\n\t\t/**\n\t\t * Navigate to a new absolute route.\n\t\t *\n\t\t * @param {string|number} to The path to navigate to.\n\t\t *\n\t\t * If `to` is a number we will navigate to the stack entry index + `to`\n\t\t * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n\t\t * @param {Object} options\n\t\t * @param {*} [options.state] The state will be accessible through `location.state`\n\t\t * @param {boolean} [options.replace=false] Replace the current entry in the history\n\t\t * stack, instead of pushing on a new one\n\t\t */\n\t\tnavigate(to, options) {\n\t\t\tconst { state = {}, replace = false } = options || {};\n\t\t\taction = replace ? REPLACE : PUSH;\n\t\t\tif (isNumber(to)) {\n\t\t\t\tif (options) {\n\t\t\t\t\twarn(\n\t\t\t\t\t\tNAVIGATE_ID,\n\t\t\t\t\t\t\"Navigation options (state or replace) are not supported, \" +\n\t\t\t\t\t\t\t\"when passing a number as the first argument to navigate. \" +\n\t\t\t\t\t\t\t\"They are ignored.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\taction = POP;\n\t\t\t\tsource.history.go(to);\n\t\t\t} else {\n\t\t\t\tconst keyedState = { ...state, _key: createGlobalId() };\n\t\t\t\t// try...catch iOS Safari limits to 100 pushState calls\n\t\t\t\ttry {\n\t\t\t\t\tsource.history[replace ? \"replaceState\" : \"pushState\"](\n\t\t\t\t\t\tkeyedState,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tto,\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tsource.location[replace ? \"replace\" : \"assign\"](to);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlocation = getLocation(source);\n\t\t\tnotifyListeners();\n\t\t},\n\t};\n}\n\nfunction createStackFrame(state, uri) {\n\treturn { ...createLocation(uri), state };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n\tlet index = 0;\n\tlet stack = [createStackFrame(null, initialPathname)];\n\n\treturn {\n\t\t// This is just for testing...\n\t\tget entries() {\n\t\t\treturn stack;\n\t\t},\n\t\tget location() {\n\t\t\treturn stack[index];\n\t\t},\n\t\taddEventListener() {},\n\t\tremoveEventListener() {},\n\t\thistory: {\n\t\t\tget state() {\n\t\t\t\treturn stack[index].state;\n\t\t\t},\n\t\t\tpushState(state, title, uri) {\n\t\t\t\tindex++;\n\t\t\t\t// Throw away anything in the stack with an index greater than the current index.\n\t\t\t\t// This happens, when we go back using `go(-n)`. The index is now less than `stack.length`.\n\t\t\t\t// If we call `go(+n)` the stack entries with an index greater than the current index can\n\t\t\t\t// be reused.\n\t\t\t\t// However, if we navigate to a path, instead of a number, we want to create a new branch\n\t\t\t\t// of navigation.\n\t\t\t\tstack = stack.slice(0, index);\n\t\t\t\tstack.push(createStackFrame(state, uri));\n\t\t\t},\n\t\t\treplaceState(state, title, uri) {\n\t\t\t\tstack[index] = createStackFrame(state, uri);\n\t\t\t},\n\t\t\tgo(to) {\n\t\t\t\tconst newIndex = index + to;\n\t\t\t\tif (newIndex < 0 || newIndex > stack.length - 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tindex = newIndex;\n\t\t\t},\n\t\t},\n\t};\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = !!(\n\t!isSSR &&\n\twindow.document &&\n\twindow.document.createElement\n);\n// Use memory history in iframes (for example in Svelte REPL)\nconst isEmbeddedPage = !isSSR && window.location.origin === \"null\";\nconst globalHistory = createHistory(\n\tcanUseDOM && !isEmbeddedPage ? window : createMemorySource(),\n);\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","import { get } from \"svelte/store\";\nimport { tick } from \"svelte\";\nimport { warn, ROUTER_ID, ROUTE_ID } from \"./warning\";\nimport { addListener } from \"./utils\";\n\n// We need to keep the focus candidate in a separate file, so svelte does\n// not update, when we mutate it.\n// Also, we need a single global reference, because taking focus needs to\n// work globally, even if we have multiple top level routers\n// eslint-disable-next-line import/no-mutable-exports\nexport let focusCandidate = null;\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let initialNavigation = true;\n\n/**\n * Check if RouterA is above RouterB in the document\n * @param {number} routerIdA The first Routers id\n * @param {number} routerIdB The second Routers id\n */\nfunction isAbove(routerIdA, routerIdB) {\n\tconst routerMarkers = document.querySelectorAll(\"[data-svnav-router]\");\n\tfor (let i = 0; i < routerMarkers.length; i++) {\n\t\tconst node = routerMarkers[i];\n\t\tconst currentId = Number(node.dataset.svnavRouter);\n\t\tif (currentId === routerIdA) return true;\n\t\tif (currentId === routerIdB) return false;\n\t}\n\treturn false;\n}\n\n/**\n * Check if a Route candidate is the best choice to move focus to,\n * and store the best match.\n * @param {{\n     level: number;\n     routerId: number;\n     route: {\n       id: number;\n       focusElement: import(\"svelte/store\").Readable<Promise<Element>|null>;\n     }\n   }} item A Route candidate, that updated and is visible after a navigation\n */\nexport function pushFocusCandidate(item) {\n\tif (\n\t\t// Best candidate if it's the only candidate...\n\t\t!focusCandidate ||\n\t\t// Route is nested deeper, than previous candidate\n\t\t// -> Route change was triggered in the deepest affected\n\t\t// Route, so that's were focus should move to\n\t\titem.level > focusCandidate.level ||\n\t\t// If the level is identical, we want to focus the first Route in the document,\n\t\t// so we pick the first Router lookin from page top to page bottom.\n\t\t(item.level === focusCandidate.level &&\n\t\t\tisAbove(item.routerId, focusCandidate.routerId))\n\t) {\n\t\tfocusCandidate = item;\n\t}\n}\n\n/**\n * Reset the focus candidate.\n */\nexport function clearFocusCandidate() {\n\tfocusCandidate = null;\n}\n\nexport function initialNavigationOccurred() {\n\tinitialNavigation = false;\n}\n\n/*\n * `focus` Adapted from https://github.com/oaf-project/oaf-side-effects/blob/master/src/index.ts\n *\n * https://github.com/oaf-project/oaf-side-effects/blob/master/LICENSE\n */\nexport function focus(elem) {\n\tif (!elem) return false;\n\tconst TABINDEX = \"tabindex\";\n\ttry {\n\t\tif (!elem.hasAttribute(TABINDEX)) {\n\t\t\telem.setAttribute(TABINDEX, \"-1\");\n\t\t\tlet unlisten;\n\t\t\t// We remove tabindex after blur to avoid weird browser behavior\n\t\t\t// where a mouse click can activate elements with tabindex=\"-1\".\n\t\t\tconst blurListener = () => {\n\t\t\t\telem.removeAttribute(TABINDEX);\n\t\t\t\tunlisten();\n\t\t\t};\n\t\t\tunlisten = addListener(elem, \"blur\", blurListener);\n\t\t}\n\t\telem.focus();\n\t\treturn document.activeElement === elem;\n\t} catch (e) {\n\t\t// Apparently trying to focus a disabled element in IE can throw.\n\t\t// See https://stackoverflow.com/a/1600194/2476884\n\t\treturn false;\n\t}\n}\n\nexport function isEndMarker(elem, id) {\n\treturn Number(elem.dataset.svnavRouteEnd) === id;\n}\n\nexport function isHeading(elem) {\n\treturn /^H[1-6]$/i.test(elem.tagName);\n}\n\nfunction query(selector, parent = document) {\n\treturn parent.querySelector(selector);\n}\n\nexport function queryHeading(id) {\n\tconst marker = query(`[data-svnav-route-start=\"${id}\"]`);\n\tlet current = marker.nextElementSibling;\n\twhile (!isEndMarker(current, id)) {\n\t\tif (isHeading(current)) {\n\t\t\treturn current;\n\t\t}\n\t\tconst heading = query(\"h1,h2,h3,h4,h5,h6\", current);\n\t\tif (heading) {\n\t\t\treturn heading;\n\t\t}\n\t\tcurrent = current.nextElementSibling;\n\t}\n\treturn null;\n}\n\nexport function handleFocus(route) {\n\tPromise.resolve(get(route.focusElement)).then(elem => {\n\t\tconst focusElement = elem || queryHeading(route.id);\n\t\tif (!focusElement) {\n\t\t\twarn(\n\t\t\t\tROUTER_ID,\n\t\t\t\t\"Could not find an element to focus. \" +\n\t\t\t\t\t\"You should always render a header for accessibility reasons, \" +\n\t\t\t\t\t'or set a custom focus element via the \"useFocus\" hook. ' +\n\t\t\t\t\t\"If you don't want this Route or Router to manage focus, \" +\n\t\t\t\t\t'pass \"primary={false}\" to it.',\n\t\t\t\troute,\n\t\t\t\tROUTE_ID,\n\t\t\t);\n\t\t}\n\t\tconst headingFocused = focus(focusElement);\n\t\tif (headingFocused) return;\n\t\tfocus(document.documentElement);\n\t});\n}\n\nexport const createTriggerFocus = (a11yConfig, announcementText, location) => (\n\tmanageFocus,\n\tannounceNavigation,\n) =>\n\t// Wait until the dom is updated, so we can look for headings\n\ttick().then(() => {\n\t\tif (!focusCandidate || initialNavigation) {\n\t\t\tinitialNavigationOccurred();\n\t\t\treturn;\n\t\t}\n\t\tif (manageFocus) {\n\t\t\thandleFocus(focusCandidate.route);\n\t\t}\n\t\tif (a11yConfig.announcements && announceNavigation) {\n\t\t\tconst { path, fullPath, meta, params, uri } = focusCandidate.route;\n\t\t\tconst announcementMessage = a11yConfig.createAnnouncement(\n\t\t\t\t{ path, fullPath, meta, params, uri },\n\t\t\t\tget(location),\n\t\t\t);\n\t\t\tPromise.resolve(announcementMessage).then(message => {\n\t\t\t\tannouncementText.set(message);\n\t\t\t});\n\t\t}\n\t\tclearFocusCandidate();\n\t});\n\nexport const visuallyHiddenStyle =\n\t\"position:fixed;\" +\n\t\"top:-1px;\" +\n\t\"left:0;\" +\n\t\"width:1px;\" +\n\t\"height:1px;\" +\n\t\"padding:0;\" +\n\t\"overflow:hidden;\" +\n\t\"clip:rect(0,0,0,0);\" +\n\t\"white-space:nowrap;\" +\n\t\"border:0;\";\n","<script context=\"module\">\n\t// eslint-disable-next-line import/order\n\timport { createCounter } from \"./utils\";\n\n\tconst createId = createCounter();\n</script>\n\n<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { getContext, setContext, onMount } from \"svelte\";\n\timport { writable } from \"svelte/store\";\n\timport { LOCATION, ROUTER } from \"./contexts\";\n\timport { globalHistory } from \"./history\";\n\timport { normalizePath } from \"./paths\";\n\timport { pick, match, normalizeLocation, createLocation } from \"./routes\";\n\timport { isSSR } from \"./utils\";\n\timport { warn, ROUTER_ID } from \"./warning\";\n\timport {\n\t\tpushFocusCandidate,\n\t\tvisuallyHiddenStyle,\n\t\tcreateTriggerFocus,\n\t} from \"./a11y\";\n\n\tconst defaultBasepath = \"/\";\n\n\texport let basepath = defaultBasepath;\n\texport let url = null;\n\texport let history = globalHistory;\n\texport let primary = true;\n\texport let a11y = {};\n\n\tconst a11yConfig = {\n\t\tcreateAnnouncement: route => `Navigated to ${route.uri}`,\n\t\tannouncements: true,\n\t\t...a11y,\n\t};\n\n\t// Remember the initial `basepath`, so we can fire a warning\n\t// when the user changes it later\n\tconst initialBasepath = basepath;\n\tconst normalizedBasepath = normalizePath(basepath);\n\n\tconst locationContext = getContext(LOCATION);\n\tconst routerContext = getContext(ROUTER);\n\n\tconst isTopLevelRouter = !locationContext;\n\tconst routerId = createId();\n\n\tconst manageFocus = primary && !(routerContext && !routerContext.manageFocus);\n\tconst announcementText = writable(\"\");\n\n\tconst routes = writable([]);\n\tconst activeRoute = writable(null);\n\t// Used in SSR to synchronously set that a Route is active.\n\tlet hasActiveRoute = false;\n\n\t// Nesting level of router.\n\t// We will need this to identify sibling routers, when moving\n\t// focus on navigation, so we can focus the first possible router\n\tconst level = isTopLevelRouter ? 0 : routerContext.level + 1;\n\n\t// If we're running an SSR we force the location to the `url` prop\n\tconst getInitialLocation = () =>\n\t\tnormalizeLocation(\n\t\t\tisSSR ? createLocation(url) : history.location,\n\t\t\tnormalizedBasepath,\n\t\t);\n\tconst location = isTopLevelRouter\n\t\t? writable(getInitialLocation())\n\t\t: locationContext;\n\tconst prevLocation = writable($location);\n\n\tconst triggerFocus = createTriggerFocus(\n\t\ta11yConfig,\n\t\tannouncementText,\n\t\tlocation,\n\t);\n\n\tconst createRouteFilter = routeId => routeList =>\n\t\trouteList.filter(routeItem => routeItem.id !== routeId);\n\n\tfunction registerRoute(route) {\n\t\tif (isSSR) {\n\t\t\t// In SSR we should set the activeRoute immediately if it is a match.\n\t\t\t// If there are more Routes being registered after a match is found,\n\t\t\t// we just skip them.\n\t\t\tif (hasActiveRoute) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst matchingRoute = match(route, $location.pathname);\n\t\t\tif (matchingRoute) {\n\t\t\t\thasActiveRoute = true;\n\t\t\t\t// Return the match in SSR mode, so the matched Route can use it immediatly.\n\t\t\t\t// Waiting for activeRoute to update does not work, because it updates\n\t\t\t\t// after the Route is initialized\n\t\t\t\treturn matchingRoute; // eslint-disable-line consistent-return\n\t\t\t}\n\t\t} else {\n\t\t\troutes.update(prevRoutes => {\n\t\t\t\t// Remove an old version of the updated route,\n\t\t\t\t// before pushing the new version\n\t\t\t\tconst nextRoutes = createRouteFilter(route.id)(prevRoutes);\n\t\t\t\tnextRoutes.push(route);\n\t\t\t\treturn nextRoutes;\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction unregisterRoute(routeId) {\n\t\troutes.update(createRouteFilter(routeId));\n\t}\n\n\tif (!isTopLevelRouter && basepath !== defaultBasepath) {\n\t\twarn(\n\t\t\tROUTER_ID,\n\t\t\t'Only top-level Routers can have a \"basepath\" prop. It is ignored.',\n\t\t\t{ basepath },\n\t\t);\n\t}\n\t$: if (basepath !== initialBasepath) {\n\t\twarn(ROUTER_ID, 'You cannot change the \"basepath\" prop. It is ignored.');\n\t}\n\n\t// This reactive statement will be run when the Router is created\n\t// when there are no Routes and then again the following tick, so it\n\t// will not find an active Route in SSR and in the browser it will only\n\t// pick an active Route after all Routes have been registered.\n\t$: {\n\t\tconst bestMatch = pick($routes, $location.pathname);\n\t\tactiveRoute.set(bestMatch);\n\t}\n\n\t// Manage focus and announce navigation to screen reader users\n\t$: {\n\t\tif (isTopLevelRouter) {\n\t\t\tconst hasHash = !!$location.hash;\n\t\t\t// When a hash is present in the url, we skip focus management, because\n\t\t\t// focusing a different element will prevent in-page jumps (See #3)\n\t\t\tconst shouldManageFocus = !hasHash && manageFocus;\n\t\t\t// We don't want to make an announcement, when the hash changes,\n\t\t\t// but the active route stays the same\n\t\t\tconst announceNavigation =\n\t\t\t\t!hasHash || $location.pathname !== $prevLocation.pathname;\n\t\t\ttriggerFocus(shouldManageFocus, announceNavigation);\n\t\t}\n\t}\n\n\t// Queue matched Route, so top level Router can decide which Route to focus.\n\t// Non primary Routers should just be ignored\n\t$: if (manageFocus && $activeRoute && $activeRoute.primary) {\n\t\tpushFocusCandidate({ level, routerId, route: $activeRoute });\n\t}\n\n\tif (isTopLevelRouter) {\n\t\t// The topmost Router in the tree is responsible for updating\n\t\t// the location store and supplying it through context.\n\t\tonMount(() => {\n\t\t\tconst unlisten = history.listen(changedHistory => {\n\t\t\t\tconst normalizedLocation = normalizeLocation(\n\t\t\t\t\tchangedHistory.location,\n\t\t\t\t\tnormalizedBasepath,\n\t\t\t\t);\n\t\t\t\tprevLocation.set($location);\n\t\t\t\tlocation.set(normalizedLocation);\n\t\t\t});\n\n\t\t\treturn unlisten;\n\t\t});\n\n\t\tsetContext(LOCATION, location);\n\t}\n\n\tsetContext(ROUTER, {\n\t\tactiveRoute,\n\t\tregisterRoute,\n\t\tunregisterRoute,\n\t\tmanageFocus,\n\t\tlevel,\n\t\tid: routerId,\n\t\thistory: isTopLevelRouter ? history : routerContext.history,\n\t\tbasepath: isTopLevelRouter ? normalizedBasepath : routerContext.basepath,\n\t});\n</script>\n\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-router={routerId} />\n\n<slot />\n\n{#if isTopLevelRouter && manageFocus && a11yConfig.announcements}\n\t<div\n\t\trole=\"status\"\n\t\taria-atomic=\"true\"\n\t\taria-live=\"polite\"\n\t\tstyle={visuallyHiddenStyle}\n\t>\n\t\t{$announcementText}\n\t</div>\n{/if}\n","import { getContext, onDestroy, tick } from \"svelte\";\nimport { derived, get, writable } from \"svelte/store\";\nimport { LOCATION, ROUTER, ROUTE, ROUTE_PARAMS, FOCUS_ELEM } from \"./contexts\";\nimport { resolveLink, match, normalizeLocation } from \"./routes\";\nimport { isNumber } from \"./utils\";\nimport {\n\tfail,\n\tcreateLabel,\n\tUSE_FOCUS_ID,\n\tROUTER_ID,\n\tUSE_LOCATION_ID,\n\tROUTE_ID,\n\tUSE_RESOLVE_ID,\n\tUSE_RESOLVABLE_ID,\n\tUSE_NAVIGATE_ID,\n\tUSE_MATCH_ID,\n\tUSE_PARAMS_ID,\n} from \"./warning\";\n\n/**\n * Check if a component or hook have been created outside of a\n * context providing component\n * @param {number} componentId\n * @param {*} props\n * @param {string?} ctxKey\n * @param {number?} ctxProviderId\n */\nexport function usePreflightCheck(\n\tcomponentId,\n\tprops,\n\tctxKey = ROUTER,\n\tctxProviderId = ROUTER_ID,\n) {\n\tconst ctx = getContext(ctxKey);\n\tif (!ctx) {\n\t\tfail(\n\t\t\tcomponentId,\n\t\t\tlabel =>\n\t\t\t\t`You cannot use ${label} outside of a ${createLabel(ctxProviderId)}.`,\n\t\t\tprops,\n\t\t);\n\t}\n}\n\nconst toReadonly = ctx => {\n\tconst { subscribe } = getContext(ctx);\n\treturn { subscribe };\n};\n\n/**\n * Access the current location via a readable store.\n * @returns {import(\"svelte/store\").Readable<{\n    pathname: string;\n    search: string;\n    hash: string;\n    state: {};\n  }>}\n *\n * @example\n  ```html\n  <script>\n    import { useLocation } from \"svelte-navigator\";\n\n    const location = useLocation();\n\n    $: console.log($location);\n    // {\n    //   pathname: \"/blog\",\n    //   search: \"?id=123\",\n    //   hash: \"#comments\",\n    //   state: {}\n    // }\n  </script>\n  ```\n */\nexport function useLocation() {\n\tusePreflightCheck(USE_LOCATION_ID);\n\treturn toReadonly(LOCATION);\n}\n\n/**\n * @typedef {{\n    path: string;\n    fullPath: string;\n    uri: string;\n    params: {};\n  }} RouteMatch\n */\n\n/**\n * @typedef {import(\"svelte/store\").Readable<RouteMatch|null>} RouteMatchStore\n */\n\n/**\n * Access the history of top level Router.\n */\nexport function useHistory() {\n\tconst { history } = getContext(ROUTER);\n\treturn history;\n}\n\n/**\n * Access the base of the parent Route.\n */\nexport function useRouteBase() {\n\tconst route = getContext(ROUTE);\n\treturn route ? derived(route, _route => _route.base) : writable(\"/\");\n}\n\n/**\n * Resolve a given link relative to the current `Route` and the `Router`s `basepath`.\n * It is used under the hood in `Link` and `useNavigate`.\n * You can use it to manually resolve links, when using the `link` or `links` actions.\n *\n * @returns {(path: string) => string}\n *\n * @example\n  ```html\n  <script>\n    import { link, useResolve } from \"svelte-navigator\";\n\n    const resolve = useResolve();\n    // `resolvedLink` will be resolved relative to its parent Route\n    // and the Routers `basepath`\n    const resolvedLink = resolve(\"relativePath\");\n  </script>\n\n  <a href={resolvedLink} use:link>Relative link</a>\n  ```\n */\nexport function useResolve() {\n\tusePreflightCheck(USE_RESOLVE_ID);\n\tconst routeBase = useRouteBase();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\t/**\n\t * Resolves the path relative to the current route and basepath.\n\t *\n\t * @param {string} path The path to resolve\n\t * @returns {string} The resolved path\n\t */\n\tconst resolve = path => resolveLink(path, get(routeBase), appBase);\n\treturn resolve;\n}\n\n/**\n * Resolve a given link relative to the current `Route` and the `Router`s `basepath`.\n * It is used under the hood in `Link` and `useNavigate`.\n * You can use it to manually resolve links, when using the `link` or `links` actions.\n *\n * @returns {import(\"svelte/store\").Readable<string>}\n *\n * @example\n  ```html\n  <script>\n    import { link, useResolvable } from \"svelte-navigator\";\n\n    // `resolvedLink` will be resolved relative to its parent Route\n    // and the Routers `basepath`.\n    const resolvedLink = useResolvable(\"relativePath\");\n  </script>\n\n  <a href={$resolvedLink} use:link>Relative link</a>\n  ```\n */\nexport function useResolvable(path) {\n\tusePreflightCheck(USE_RESOLVABLE_ID);\n\tconst routeBase = useRouteBase();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\treturn derived(routeBase, _routeBase =>\n\t\tresolveLink(path, _routeBase, appBase),\n\t);\n}\n\n/**\n * A hook, that returns a context-aware version of `navigate`.\n * It will automatically resolve the given link relative to the current Route.\n * It will also resolve a link against the `basepath` of the Router.\n *\n * @example\n  ```html\n  <!-- App.svelte -->\n  <script>\n    import { link, Route } from \"svelte-navigator\";\n    import RouteComponent from \"./RouteComponent.svelte\";\n  </script>\n\n  <Router>\n    <Route path=\"route1\">\n      <RouteComponent />\n    </Route>\n    <!-- ... -->\n  </Router>\n\n  <!-- RouteComponent.svelte -->\n  <script>\n    import { useNavigate } from \"svelte-navigator\";\n\n    const navigate = useNavigate();\n  </script>\n\n  <button on:click=\"{() => navigate('relativePath')}\">\n    go to /route1/relativePath\n  </button>\n  <button on:click=\"{() => navigate('/absolutePath')}\">\n    go to /absolutePath\n  </button>\n  ```\n  *\n  * @example\n  ```html\n  <!-- App.svelte -->\n  <script>\n    import { link, Route } from \"svelte-navigator\";\n    import RouteComponent from \"./RouteComponent.svelte\";\n  </script>\n\n  <Router basepath=\"/base\">\n    <Route path=\"route1\">\n      <RouteComponent />\n    </Route>\n    <!-- ... -->\n  </Router>\n\n  <!-- RouteComponent.svelte -->\n  <script>\n    import { useNavigate } from \"svelte-navigator\";\n\n    const navigate = useNavigate();\n  </script>\n\n  <button on:click=\"{() => navigate('relativePath')}\">\n    go to /base/route1/relativePath\n  </button>\n  <button on:click=\"{() => navigate('/absolutePath')}\">\n    go to /base/absolutePath\n  </button>\n  ```\n */\nexport function useNavigate() {\n\tusePreflightCheck(USE_NAVIGATE_ID);\n\tconst resolve = useResolve();\n\tconst { navigate } = useHistory();\n\t/**\n\t * Navigate to a new route.\n\t * Resolves the link relative to the current route and basepath.\n\t *\n\t * @param {string|number} to The path to navigate to.\n\t *\n\t * If `to` is a number we will navigate to the stack entry index + `to`\n\t * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n\t * @param {Object} options\n\t * @param {*} [options.state]\n\t * @param {boolean} [options.replace=false]\n\t */\n\tconst navigateRelative = (to, options) => {\n\t\t// If to is a number, we navigate to the target stack entry via `history.go`.\n\t\t// Otherwise resolve the link\n\t\tconst target = isNumber(to) ? to : resolve(to);\n\t\treturn navigate(target, options);\n\t};\n\treturn navigateRelative;\n}\n\n/**\n * Use Svelte Navigators matching without needing to use a Route.\n * Returns a readable store with the potential match,\n * that changes, when the location changes.\n *\n * The provided path will be resolved relatively,\n * as you're used to with all paths in Svelte Navigator\n *\n * @param {string} path The path, to match against.\n * It works just like a Route path\n * @returns {RouteMatchStore} The matched route.\n * Returns `null`, when nothing could be matched\n *\n * @example\n  ```html\n  <script>\n    import { useMatch } from \"svelte-navigator\";\n\n    const relativeMatch = useMatch(\"relative/path/:to/*somewhere\");\n    const absoluteMatch = useMatch(\"/absolute/path/:to/*somewhere\");\n\n    $: console.log($relativeMatch.params.to);\n    $: console.log($absoluteMatch.params.somewhere);\n  </script>\n  ```\n */\nexport function useMatch(path) {\n\tusePreflightCheck(USE_MATCH_ID);\n\tconst location = useLocation();\n\tconst resolve = useResolve();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\tconst resolvedPath = resolve(path);\n\tconst { pathname: fullPath } = normalizeLocation(\n\t\t{ pathname: resolvedPath },\n\t\tappBase,\n\t);\n\treturn derived(location, loc => match({ fullPath, path }, loc.pathname));\n}\n\n/**\n * Access the parent Routes matched params and wildcards\n * @returns {import(\"svelte/store\").Readable<{\n     [param: string]: any;\n   }>} A readable store containing the matched parameters and wildcards\n *\n * @example\n  ```html\n  <!--\n    Somewhere inside <Route path=\"user/:id/*splat\" />\n    with a current url of \"/myApp/user/123/pauls-profile\"\n  -->\n  <script>\n    import { useParams } from \"svelte-navigator\";\n\n    const params = useParams();\n\n    $: console.log($params); // -> { id: \"123\", splat: \"pauls-profile\" }\n  </script>\n\n  <h3>Welcome user {$params.id}! bleep bloop...</h3>\n  ```\n */\nexport function useParams() {\n\tusePreflightCheck(USE_PARAMS_ID, null, ROUTE, ROUTE_ID);\n\treturn toReadonly(ROUTE_PARAMS);\n}\n\n/**\n * Provide a custom element to focus, when the parent route is visited.\n * It returns the `registerFocus` function you can call manually with an\n * Element or use as a Svelte action via the `use` directive.\n *\n * @example\n  ```html\n  <!-- Using `registerFocus` as a Svelte action: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n  </script>\n\n  <h1>Don't worry about me...</h1>\n  <p use:registerFocus>Here, look at me!</p>\n  ```\n  * @example\n  ```html\n  <!-- Calling `registerFocus` manually: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { onMount } from \"svelte\";\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n\n    let focusElement;\n\n    onMount(() => registerFocus(focusElement))\n  </script>\n\n  <h1>Don't worry about me...</h1>\n  <p bind:this={focusElement}>Here, look at me!</p>\n  ```\n  * @example\n  ```html\n  <!-- Using `registerFocus` asyncronously: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { onMount } from \"svelte\";\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n\n    const lazyImport = import(\"./MyComponent.svelte\").then(module => module.default);\n  </script>\n\n  {#await lazyImport then MyComponent}\n    <MyComponent {registerFocus} />\n  {/await}\n\n  <!-- MyComponent.svelte -->\n  <script>\n    export let registerFocus;\n  </script>\n\n  <h1 use:registerFocus>Hi there!</h1>\n  ```\n */\nexport function useFocus() {\n\tusePreflightCheck(USE_FOCUS_ID, null, ROUTE, ROUTE_ID);\n\tconst location = useLocation();\n\tconst focusElement = getContext(FOCUS_ELEM);\n\n\tlet resolve;\n\tconst unsubscribe = location.subscribe(() => {\n\t\tconst lazyElement = new Promise(_resolve => {\n\t\t\tresolve = _resolve;\n\t\t});\n\t\tfocusElement.set(lazyElement);\n\t});\n\n\tonDestroy(unsubscribe);\n\n\treturn node => {\n\t\tlet unmounted = false;\n\t\tconst innerUnsubscribe = location.subscribe(() => {\n\t\t\ttick().then(() => {\n\t\t\t\tif (!unmounted) {\n\t\t\t\t\tresolve(node);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\tunmounted = true;\n\t\t\t\tinnerUnsubscribe();\n\t\t\t},\n\t\t};\n\t};\n}\n","<script context=\"module\">\n\t// eslint-disable-next-line import/order\n\timport { createCounter } from \"./utils\";\n\n\tconst createId = createCounter();\n</script>\n\n<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { getContext, onDestroy, setContext } from \"svelte\";\n\timport { writable, get } from \"svelte/store\";\n\timport Router from \"./Router.svelte\";\n\timport { ROUTER, ROUTE, ROUTE_PARAMS, FOCUS_ELEM } from \"./contexts\";\n\timport {\n\t\tuseLocation,\n\t\tuseNavigate,\n\t\tuseRouteBase,\n\t\tusePreflightCheck,\n\t} from \"./hooks\";\n\timport { isSSR } from \"./utils\";\n\timport { extractBaseUri } from \"./routes\";\n\timport { join } from \"./paths\";\n\timport { ROUTE_ID } from \"./warning\";\n\n\texport let path = \"\";\n\texport let component = null;\n\texport let meta = {};\n\texport let primary = true;\n\n\tusePreflightCheck(ROUTE_ID, $$props);\n\n\tconst id = createId();\n\n\tconst { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n\tconst parentBase = useRouteBase();\n\tconst location = useLocation();\n\tconst focusElement = writable(null);\n\n\t// In SSR we cannot wait for $activeRoute to update,\n\t// so we use the match returned from `registerRoute` instead\n\tlet ssrMatch;\n\n\tconst route = writable();\n\t$: {\n\t\t// The route store will be re-computed whenever props, location or parentBase change\n\t\tconst isDefault = path === \"\";\n\t\tconst rawBase = join($parentBase, path);\n\t\tconst updatedRoute = {\n\t\t\tid,\n\t\t\tpath,\n\t\t\tmeta,\n\t\t\t// If no path prop is given, this Route will act as the default Route\n\t\t\t// that is rendered if no other Route in the Router is a match\n\t\t\tdefault: isDefault,\n\t\t\tfullPath: isDefault ? \"\" : rawBase,\n\t\t\tbase: isDefault\n\t\t\t\t? $parentBase\n\t\t\t\t: extractBaseUri(rawBase, $location.pathname),\n\t\t\tprimary,\n\t\t\tfocusElement,\n\t\t};\n\t\troute.set(updatedRoute);\n\t\t// If we're in SSR mode and the Route matches,\n\t\t// `registerRoute` will return the match\n\t\tssrMatch = registerRoute(updatedRoute);\n\t}\n\n\t$: isActive = !!(ssrMatch || ($activeRoute && $activeRoute.id === id));\n\n\tconst params = writable({});\n\t$: if (isActive) {\n\t\tconst { params: activeParams } = ssrMatch || $activeRoute;\n\t\tparams.set(activeParams);\n\t}\n\n\tsetContext(ROUTE, route);\n\tsetContext(ROUTE_PARAMS, params);\n\tsetContext(FOCUS_ELEM, focusElement);\n\n\t// We need to call useNavigate after the route is set,\n\t// so we can use the routes path for link resolution\n\tconst navigate = useNavigate();\n\n\t// There is no need to unregister Routes in SSR since it will all be\n\t// thrown away anyway\n\tif (!isSSR) {\n\t\tonDestroy(() => unregisterRoute(id));\n\t}\n</script>\n\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-route-start={id} />\n{#if isActive}\n\t<Router {primary}>\n\t\t<!--\n      `$params` always returns `{}` in SSR in Route, because it will\n      update after component initialisation has already happend.\n      `get(params)` always works, but is not reactive, so we can't\n      use it in client rendered mode\n    -->\n\t\t{#if component !== null}\n\t\t\t<svelte:component\n\t\t\t\tthis={component}\n\t\t\t\tlocation={$location}\n\t\t\t\t{navigate}\n\t\t\t\t{...isSSR ? get(params) : $params}\n\t\t\t\t{...$$restProps}\n\t\t\t/>\n\t\t{:else}\n\t\t\t<slot\n\t\t\t\tparams={isSSR ? get(params) : $params}\n\t\t\t\tlocation={$location}\n\t\t\t\t{navigate}\n\t\t\t/>\n\t\t{/if}\n\t</Router>\n{/if}\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-route-end={id} />\n","<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { createEventDispatcher } from \"svelte\";\n\timport {\n\t\tuseLocation,\n\t\tuseResolve,\n\t\tuseHistory,\n\t\tusePreflightCheck,\n\t} from \"./hooks\";\n\timport { shouldNavigate, isFunction } from \"./utils\";\n\timport { startsWith } from \"./paths\";\n\timport { LINK_ID } from \"./warning\";\n\n\texport let to;\n\texport let replace = false;\n\texport let state = {};\n\texport let getProps = null;\n\n\tusePreflightCheck(LINK_ID, $$props);\n\n\tconst location = useLocation();\n\tconst dispatch = createEventDispatcher();\n\tconst resolve = useResolve();\n\tconst { navigate } = useHistory();\n\n\t// We need to pass location here to force re-resolution of the link,\n\t// when the pathname changes. Otherwise we could end up with stale path params,\n\t// when for example an :id changes in the parent Routes path\n\t$: href = resolve(to, $location);\n\t$: isPartiallyCurrent = startsWith($location.pathname, href);\n\t$: isCurrent = href === $location.pathname;\n\t$: ariaCurrent = isCurrent ? { \"aria-current\": \"page\" } : {};\n\t$: props = (() => {\n\t\tif (isFunction(getProps)) {\n\t\t\tconst dynamicProps = getProps({\n\t\t\t\tlocation: $location,\n\t\t\t\thref,\n\t\t\t\tisPartiallyCurrent,\n\t\t\t\tisCurrent,\n\t\t\t});\n\t\t\treturn { ...$$restProps, ...dynamicProps };\n\t\t}\n\t\treturn $$restProps;\n\t})();\n\n\tfunction onClick(event) {\n\t\tdispatch(\"click\", event);\n\n\t\tif (shouldNavigate(event)) {\n\t\t\tevent.preventDefault();\n\t\t\t// Don't push another entry to the history stack when the user\n\t\t\t// clicks on a Link to the page they are currently on.\n\t\t\tconst shouldReplace = isCurrent || replace;\n\t\t\tnavigate(href, { state, replace: shouldReplace });\n\t\t}\n\t}\n</script>\n\n<a {href} {...ariaCurrent} on:click={onClick} {...props}>\n\t<slot />\n</a>\n","<!--\n  This example requires Tailwind CSS v2.0+ \n  \n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  module.exports = {\n    // ...\n    plugins: [\n      // ...\n      require('@tailwindcss/forms'),\n    ]\n  }\n  ```\n-->\n<script>\n  export let open = false;\n</script>\n\n<svelte:head>\n  <title>Login</title>\n  <meta name=\"robots\" content=\"noindex nofollow\" />\n  <html lang=\"en\" />\n</svelte:head>\n\n\n<div\n  class=\"min-h-screen flex  justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8 z-10 bg-opacity-50\"\n\n>\n  <div class=\"max-w-md w-full space-y-8\">\n    <div>\n      <h2 class=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n        <img\n          class=\"mx-auto h-12 w-auto\"\n          src=\"./logo.svg\"\n          width=\"100px\"\n          alt=\"Workflow\"\n        />\n        Sign in to your Movie-Master account\n      </h2>\n    </div>\n    <form class=\"mt-8 space-y-6\" action=\"#\" method=\"POST\">\n      <input type=\"hidden\" name=\"remember\" value=\"true\" />\n      <div class=\"rounded-md shadow-sm -space-y-px\">\n        <div>\n          <label for=\"email-address\" class=\"sr-only\">Email address</label>\n          <input\n            id=\"email-address\"\n            name=\"email\"\n            type=\"email\"\n            autocomplete=\"email\"\n            required\n            class=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n            placeholder=\"Email address\"\n          />\n        </div>\n        <div>\n          <label for=\"password\" class=\"sr-only\">Password</label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            autocomplete=\"current-password\"\n            required\n            class=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n            placeholder=\"Password\"\n          />\n        </div>\n      </div>\n\n      <div class=\"flex items-center justify-between\">\n        <div class=\"flex items-center\">\n          <input\n            id=\"remember_me\"\n            name=\"remember_me\"\n            type=\"checkbox\"\n            class=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n          />\n          <label for=\"remember_me\" class=\"ml-2 block text-sm text-gray-900\">\n            Remember me\n          </label>\n        </div>\n\n        <div class=\"text-sm\">\n          <a href=\"#\" class=\"font-medium text-indigo-600 hover:text-indigo-500\">\n            Forgot your password?\n          </a>\n        </div>\n      </div>\n\n      <div>\n        <button\n          type=\"submit\"\n          class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n          <span class=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n            <!-- Heroicon name: solid/lock-closed -->\n            <svg\n              class=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\n                clip-rule=\"evenodd\"\n              />\n            </svg>\n          </span>\n          Sign in\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<script>\n    import { onMount } from \"svelte\";\n    import { fade } from 'svelte/transition';\n      const images = [\n        {\n          img: \"/images/sample_1.jpg\",\n          text1: \"\",\n          text2: \"\"\n        },\n        {\n          img: \"/images/sample_3.jpg\",\n          text1: \"\",\n          text2: \"\"\n        },\n        {\n          img: \"/images/sample_2.jpg\",\n          text1: \"\",\n          text2: \"\"\n        },\n        {\n          img: \"/images/sample_1.jpg\",\n          text1: \"\",\n          text2: \"\"\n        },\n        {\n          img: \"/images/sample_3.jpg\",\n          text1: \"\",\n          text2: \"\"\n        },\n        {\n          img: \"/images/sample_2.jpg\",\n          text1: \"\",\n          text2: \"\"\n        },\n        {\n          img: \"/images/sample_1.jpg\",\n          text1: \"\",\n          text2: \"\"\n        },\n      ]\n      onMount (() => {\n          var elem = document.querySelector('.main-carousel');\n          var slider = tns({\n            container: \".my-slider\",\n            autoHeight: true,\n            items: 4,\n            swipeAngle: false,\n            speed: 600,\n            autoplayTimeout: 1000,\n            nav: false,\n            autoplay: true,\n            autoplayButtonOutput: false,\n            prevButton:document.getElementById(\"prev-carousel\"),\n            nextButton:document.getElementById(\"next-carousel\"),\n            mouseDrag: true\n          });\n      });\n    </script>\n    <div class=\"my-slider\"  >\n      {#each images as item,i }\n          <div  class=\"mx-2 my-2\" >\n            <img src = {item.img} alt ={i} style=\"width:100%; height:200px; object-fit:   cover;\"/>\n          </div>\n      {/each}\n    </div>\n      <a id=\"prev-carousel\"  class=\"z-10 left carousel-control-left\"><i class=\"fa fa-chevron-left\"></i></a>\n      <a id=\"next-carousel\"  class=\"z-10 right carousel-control-right\"><i class=\"fa fa-chevron-right\"></i></a>\n    \n    <style>\n    /* Control buttons  */\n    .carousel-control-left{\n        position: absolute;\n        width: 50px;    \n        background: none;\n      color: #222;\n      font-size: 2.3em;\n      text-shadow: none;\n      margin-top: -150px;\n    }\n    .carousel-control-right {\n        position: absolute;\n        width: 50px;    \n        right:0px;\n        background: none;\n      color: #222;\n      font-size: 2.3em;\n      text-shadow: none;\n      text-align: end;\n      margin-top: -150px;\n    \n    }\n    </style>","\n<script>\nimport { onMount, beforeUpdate } from \"svelte\";\n\n\n    export let id;\n    let jsonData;\n    let getData = () => {\n        console.log(id)\n        jsonData =  [\n                {\n                    img: \"/images/sample_1.jpg\",\n                    name: \"Jumanji\",\n                    desc1: \" 12A | 2h 3min | Action, Adventure, Comedy | 11 December 2019 (UK)\",\n                    desc2: \"In Jumanji: The Next Level, the gang is back but the game has changed. As they return to rescue one of their own, the players will have to brave parts unknown from arid deserts to snowy mountains, to escape the world's most dangerous game.\",\n                },\n                {\n                    img: \"/images/sample_1.jpg\",\n                    name: \"Jumanji\",\n                    desc1: \" 12A | 2h 3min | Action, Adventure, Comedy | 11 December 2019 (UK)\",\n                    desc2: \"In Jumanji: The Next Level, the gang is back but the game has changed. As they return to rescue one of their own, the players will have to brave parts unknown from arid deserts to snowy mountains, to escape the world's most dangerous game.\",\n                },\n                {\n                    img: \"/images/sample_1.jpg\",\n                    name: \"Jumanji\",\n                    desc1: \" 12A | 2h 3min | Action, Adventure, Comedy | 11 December 2019 (UK)\",\n                    desc2: \"In Jumanji: The Next Level, the gang is back but the game has changed. As they return to rescue one of their own, the players will have to brave parts unknown from arid deserts to snowy mountains, to escape the world's most dangerous game.\",\n                },\n                {\n                    img: \"/images/sample_1.jpg\",\n                    name: \"Jumanji\",\n                    desc1: \" 12A | 2h 3min | Action, Adventure, Comedy | 11 December 2019 (UK)\",\n                    desc2: \"In Jumanji: The Next Level, the gang is back but the game has changed. As they return to rescue one of their own, the players will have to brave parts unknown from arid deserts to snowy mountains, to escape the world's most dangerous game.\",\n                },\n                {\n                    img: \"/images/sample_1.jpg\",\n                    name: \"Jumanji\",\n                    desc1: \" 12A | 2h 3min | Action, Adventure, Comedy | 11 December 2019 (UK)\",\n                    desc2: \"In Jumanji: The Next Level, the gang is back but the game has changed. As they return to rescue one of their own, the players will have to brave parts unknown from arid deserts to snowy mountains, to escape the world's most dangerous game.\",\n                },\n                {\n                    img: \"/images/sample_1.jpg\",\n                    name: \"Jumanji\",\n                    desc1: \" 12A | 2h 3min | Action, Adventure, Comedy | 11 December 2019 (UK)\",\n                    desc2: \"In Jumanji: The Next Level, the gang is back but the game has changed. As they return to rescue one of their own, the players will have to brave parts unknown from arid deserts to snowy mountains, to escape the world's most dangerous game.\",\n                },\n            ]\n    }\n    beforeUpdate(getData)\n\n</script>\n\n<!-- Card code block start -->\n<div\n  class=\"grid xl:grid-cols-1 my-4 gap-4  mx-10\"\n>\n    {#each jsonData as  title}\n        <div class=\"bg-white dark:bg-gray-800 rounded shadow p-6\">\n        <div class=\"flex items-center justify-between w-full sm:w-full mb-8\">\n            <div class=\"flex items-center\">\n            <div class=\"p-1 bg-blue-200 \">\n                <img\n                src={title.img}\n                width=\"200px\"\n                alt ={1}\n                />\n    \n            </div>\n            <div class=\"ml-6\">\n                <h3\n                class=\"mb-1 leading-5 text-gray-800 dark:text-gray-100 font-bold text-2xl\"\n                >\n                {title.name}\n                </h3>\n                <p\n                class=\"text-gray-600 dark:text-gray-400 text-sm tracking-normal font-normal leading-5\"\n                >\n                {title.desc1}\n                </p>\n                <p\n                class=\"text-gray-600 dark:text-gray-400 text-sm tracking-normal font-normal leading-5\"\n                >\n                {title.desc2}\n            </p>\n            </div>\n            </div>\n        </div>\n        </div>\n     \n    {/each}\n</div>","<script>\n  export let profile = \"saksham\";\n  /**\n   * 0: not logged in, genereal page\n   * 1: logged and all ok\n   * 2: changing security settings\n   * 3: logging in\n   */\n  import { Router, Route, Link } from \"svelte-navigator\";\n\n  import Login from \"./routes/Login.svelte\";\n  import Title from \"./routes/Title.svelte\";\n  import NewAccount from \"./routes/NewAccount.svelte\";\n  import Settings from \"./routes/Settings.svelte\";\n  import Tailwindcss from \"./Tailwindcss.svelte\";\n  import Profile from \"./routes/Profile.svelte\";\n  import Search from \"./routes/Search.svelte\";\n  import Feed from \"./routes/Feed.svelte\";\n  import Cast from \"./routes/Cast.svelte\";\n  import List from \"./routes/List.svelte\";\n</script>\n\n<Router>\n  <header\n  class=\"border-b md:flex md:items-center md:justify-between p-4 pb-0 shadow-lg md:pb-4\"\n  >\n  <!-- Logo text or image -->\n  <div class=\"flex items-center justify-between mb-4 md:mb-0 font-header1\">\n    <h1 class=\"leading-none text-2xl text-grey-darkest\">\n      <Link to=\"/\" class=\"no-underline text-grey-darkest hover:text-black\">\n        Movie Master\n      </Link>\n    </h1>\n  </div>\n  <!-- END Logo text or image -->\n  \n  <!-- Search field -->\n  <form class=\"mb-4 w-full md:mb-0 md:w-1/4\">\n    <label class=\"hidden\" for=\"search-form\">Search</label>\n    <input\n      class=\"bg-grey-lightest border-2 focus:border-orange p-2 rounded-lg shadow-inner w-full\"\n      placeholder=\"Search\"\n      type=\"text\"\n    />\n    <button class=\"hidden\">Submit</button>\n  </form>\n  <!-- END Search field -->\n  \n  <!-- Global navigation -->\n  <nav>\n    <ul class=\"list-reset md:flex md:items-center\">\n      <li class=\"md:ml-4\">\n        <a\n        class=\"block no-underline hover:underline py-2 text-grey-darkest hover:text-black md:border-none md:p-0\"\n        href={profile ? `/profile/${profile}`: \"login\"}\n        >\n        <i class=\"fa fa-user\" />\n        {profile || \"Login\" }\n        </a>\n      </li>\n      <li class=\"md:ml-4\">\n        <a\n          class=\"border-t block no-underline hover:underline py-2 text-grey-darkest hover:text-black md:border-none md:p-0\"\n          href=\"/search\"\n        >\n          Advanced Search\n        </a>\n      </li>\n      <li class=\"md:ml-4\">\n        <a\n          class=\"border-t block no-underline hover:underline py-2 text-grey-darkest hover:text-black md:border-none md:p-0\"\n          href=\"/settings\"\n        >\n          Dashboard\n        </a>\n      </li>\n    </ul>\n  </nav>\n  <!-- END Global navigation -->\n  </header>  <main>\n    <Route path=\"cast/:id\">\n      <Cast />\n    </Route>\n    <Route path=\"title/:id\" let:params>\n      <!-- <Title id={params.id} /> -->\n    </Route>\n    <Route path=\"/search\">\n      <Search />\n    </Route>\n    <Route path=\"/\">\n      <Feed />\n    </Route>\n    <Route path=\"profile/:id\">\n      <Profile />\n    </Route>\n    <Route path=\"settings\">\n      <Settings />\n    </Route>\n    <Route path=\"new\">\n      <NewAccount />\n    </Route>\n    <Route path=\"login\">\n      <Login />\n    </Route>\n    <Route path=\"list/:id\" let:params>\n      <List id={params.id}/>\n    </Route>\n  </main>\n  <Tailwindcss />\n</Router>\n\n<style>\n  main {\n    padding: 1em;\n    margin: 0 auto;\n    font-family: 'Antic Slab', serif;\n  }\n\n  @import url('https://fonts.googleapis.com/css2?family=Antic+Slab&display=swap');\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","set_data","wholeText","set_style","important","setProperty","current_component","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","event","e","createEvent","initCustomEvent","custom_event","call","setContext","context","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","flushing","seen_callbacks","update","pop","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","init","options","instance","create_fragment","not_equal","parent_component","bound","on_disconnect","Map","skip_bound","ready","ret","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","isUndefined","isFunction","isNumber","createCounter","isSSR","window","addListener","handler","addEventListener","removeEventListener","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","createKey","ctxName","LOCATION","ROUTER","ROUTE","ROUTE_PARAMS","FOCUS_ELEM","paramRegex","startsWith","string","search","substr","isSplat","segment","stripSlashes","str","replace","segmentize","uri","filterFalsy","segments","split","Boolean","addQuery","pathname","query","normalizePath","path","join","pathFragments","joinedSegments","labels","1","2","3","4","5","6","7","8","9","10","11","createLabel","labelId","createMessage","message","originId","origin","to","basepath","createIdentifier","originMsg","label","createMessageHandler","args","fail","warn","console","rankRoute","route","score","default","fullPath","reduce","acc","nextScore","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","bestMatch","defaultMatch","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","params","createMatch","routeSegments","routeSegment","uriSegment","splatName","decodeURIComponent","dynamicMatch","exec","match","normalizeLocation","location","hash","state","baseSegments","pathSegments","shift","normalizeUrlFragment","frag","createLocation","url","searchIndex","hashIndex","hasSearchIndex","hasHashIndex","pathnameAndSearch","resolveLink","routeBase","appBase","base","toPathname","toQuery","basePathname","toSegments","concat","allSegments","extractBaseUri","routePath","routeMatch","POP","getLocation","source","encodeURI","decodeURI","history","_key","createStackFrame","canUseDOM","isEmbeddedPage","globalHistory","listeners","action","notifyListeners","listenerFns","listener","unlisten","go","keyedState","random","toString","substring","createHistory","initialPathname","stack","entries","title","newIndex","createMemorySource","focusCandidate","initialNavigation","pushFocusCandidate","item","level","routerIdA","routerIdB","routerMarkers","querySelectorAll","currentId","Number","dataset","svnavRouter","isAbove","routerId","focus","elem","TABINDEX","hasAttribute","blurListener","activeElement","isEndMarker","id","svnavRouteEnd","selector","parent","querySelector","handleFocus","focusElement","current","nextElementSibling","tagName","heading","queryHeading","documentElement","createTriggerFocus","a11yConfig","announcementText","manageFocus","announceNavigation","announcements","meta","announcementMessage","createAnnouncement","createId","defaultBasepath","primary","a11y","initialBasepath","normalizedBasepath","locationContext","routerContext","isTopLevelRouter","activeRoute","hasActiveRoute","prevLocation","$location","triggerFocus","createRouteFilter","routeId","routeList","routeItem","listen","changedHistory","normalizedLocation","registerRoute","matchingRoute","prevRoutes","nextRoutes","unregisterRoute","$routes","hasHash","shouldManageFocus","$prevLocation","$activeRoute","usePreflightCheck","componentId","ctxKey","ctxProviderId","useLocation","toReadonly","useHistory","useRouteBase","_route","useResolve","parentBase","ssrMatch","navigate","useNavigate","isDefault","rawBase","$parentBase","updatedRoute","isActive","activeParams","getProps","dispatch","href","isPartiallyCurrent","isCurrent","ariaCurrent","aria-current","dynamicProps","$$restProps","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","shouldNavigate","preventDefault","open","img","tns","container","autoHeight","items","swipeAngle","speed","autoplayTimeout","nav","autoplay","autoplayButtonOutput","prevButton","getElementById","nextButton","mouseDrag","text1","text2","desc1","desc2","jsonData","log","profile","body"],"mappings":"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"}